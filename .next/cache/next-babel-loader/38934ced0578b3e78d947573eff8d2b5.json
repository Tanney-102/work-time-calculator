{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/taeeun/Desktop/Programming/Projects/work-time-calc/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/taeeun/Desktop/Programming/Projects/work-time-calc/pages/index.js\",\n    _this = this;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    color:#4c4a49;\\n    font-family: 'GmarketSansMedium', '\\uB098\\uB214\\uACE0\\uB515', NanumGothic, '\\uB3CB\\uC6C0', Dotum, sans-serif;\\n    font-size: 3.5rem;\\n    line-height:2;\\n    text-shadow:1px 1px 1px #5c5a59;\\n\\n    &:hover {\\n        transform: scale(1.1);\\n        transition: all 0.1s ease;\\n    };\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    background-color:#eceae9;\\n\\n    display:flex;\\n    justify-content:center;\\n    align-items:center;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\nvar Main = styled.main(_templateObject());\n_c = Main;\nvar FileInput = styled.label(_templateObject2());\n_c2 = FileInput;\n\nvar Home = function Home() {\n  var parseFile = function parseFile(e) {\n    var reader = new FileReader();\n\n    reader.onload = function () {\n      var fileData = reader.result;\n      var wb = XLSX.read(fileData, {\n        type: 'binary'\n      });\n      var firstSheetName = wb.SheetNames[0];\n      var sheet = wb.Sheets[firstSheetName];\n      mainSheet = [];\n      var range = XLSX.utils.decode_range(sheet['!ref']);\n\n      for (var R = 2; R <= range.e.r; ++R) {\n        var rowData = [];\n        rowData.push(getElem(sheet, 0, R));\n        rowData.push(getElem(sheet, 1, R));\n        rowData.push(getElem(sheet, 2, R));\n        mainSheet.push(rowData);\n      }\n    };\n\n    reader.readAsBinaryString(e.target.files[0]);\n    fileName[0].innerHTML = e.target.files[0].name;\n    console.log(mainSheet);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Main, {\n    children: /*#__PURE__*/_jsxDEV(FileInput, {\n      children: [\"\\uD30C\\uC77C \\uC62C\\uB9AC\\uAE30\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        style: {\n          display: 'none'\n        },\n        onChange: parseFile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, _this);\n};\n\n_c3 = Home;\nexport default Home;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Main\");\n$RefreshReg$(_c2, \"FileInput\");\n$RefreshReg$(_c3, \"Home\");","map":{"version":3,"sources":["/Users/taeeun/Desktop/Programming/Projects/work-time-calc/pages/index.js"],"names":["React","styled","Main","main","FileInput","label","Home","parseFile","e","reader","FileReader","onload","fileData","result","wb","XLSX","read","type","firstSheetName","SheetNames","sheet","Sheets","mainSheet","range","utils","decode_range","R","r","rowData","push","getElem","readAsBinaryString","target","files","fileName","innerHTML","name","console","log","display"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,IAAMC,IAAI,GAAGD,MAAM,CAACE,IAAV,mBAAV;KAAMD,I;AAQN,IAAME,SAAS,GAAGH,MAAM,CAACI,KAAV,oBAAf;MAAMD,S;;AAaN,IAAME,IAAI,GAAG,SAAPA,IAAO,GAAM;AACf,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,CAAD,EAAO;AACrB,QAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AAEAD,IAAAA,MAAM,CAACE,MAAP,GAAgB,YAAM;AAClB,UAAMC,QAAQ,GAAIH,MAAM,CAACI,MAAzB;AACA,UAAMC,EAAE,GAAGC,IAAI,CAACC,IAAL,CAAUJ,QAAV,EAAoB;AAACK,QAAAA,IAAI,EAAG;AAAR,OAApB,CAAX;AACA,UAAMC,cAAc,GAAGJ,EAAE,CAACK,UAAH,CAAc,CAAd,CAAvB;AACA,UAAMC,KAAK,GAAGN,EAAE,CAACO,MAAH,CAAUH,cAAV,CAAd;AAEAI,MAAAA,SAAS,GAAG,EAAZ;AACA,UAAIC,KAAK,GAAGR,IAAI,CAACS,KAAL,CAAWC,YAAX,CAAwBL,KAAK,CAAC,MAAD,CAA7B,CAAZ;;AAEA,WAAI,IAAIM,CAAC,GAAC,CAAV,EAAaA,CAAC,IAAEH,KAAK,CAACf,CAAN,CAAQmB,CAAxB,EAA2B,EAAED,CAA7B,EAAgC;AAC5B,YAAIE,OAAO,GAAG,EAAd;AAEAA,QAAAA,OAAO,CAACC,IAAR,CAAaC,OAAO,CAACV,KAAD,EAAQ,CAAR,EAAWM,CAAX,CAApB;AACAE,QAAAA,OAAO,CAACC,IAAR,CAAaC,OAAO,CAACV,KAAD,EAAQ,CAAR,EAAWM,CAAX,CAApB;AACAE,QAAAA,OAAO,CAACC,IAAR,CAAaC,OAAO,CAACV,KAAD,EAAQ,CAAR,EAAWM,CAAX,CAApB;AAEAJ,QAAAA,SAAS,CAACO,IAAV,CAAeD,OAAf;AACH;AACJ,KAlBD;;AAoBAnB,IAAAA,MAAM,CAACsB,kBAAP,CAA0BvB,CAAC,CAACwB,MAAF,CAASC,KAAT,CAAe,CAAf,CAA1B;AACAC,IAAAA,QAAQ,CAAC,CAAD,CAAR,CAAYC,SAAZ,GAAwB3B,CAAC,CAACwB,MAAF,CAASC,KAAT,CAAe,CAAf,EAAkBG,IAA1C;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYhB,SAAZ;AACH,GA1BD;;AA4BA,sBACI,QAAC,IAAD;AAAA,2BACI,QAAC,SAAD;AAAA,iEAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAE;AAACiB,UAAAA,OAAO,EAAC;AAAT,SAA1B;AAA4C,QAAA,QAAQ,EAAEhC;AAAtD;AAAA;AAAA;AAAA;AAAA,eAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,WADJ;AAQH,CArCD;;MAAMD,I;AAuCN,eAAeA,IAAf","sourcesContent":["import React from 'react'\nimport styled from 'styled-components';\n\nconst Main = styled.main`\n    background-color:#eceae9;\n\n    display:flex;\n    justify-content:center;\n    align-items:center;\n`;\n\nconst FileInput = styled.label`\n    color:#4c4a49;\n    font-family: 'GmarketSansMedium', '나눔고딕', NanumGothic, '돋움', Dotum, sans-serif;\n    font-size: 3.5rem;\n    line-height:2;\n    text-shadow:1px 1px 1px #5c5a59;\n\n    &:hover {\n        transform: scale(1.1);\n        transition: all 0.1s ease;\n    };\n`;\n\nconst Home = () => {\n    const parseFile = (e) => {\n        const reader = new FileReader();\n    \n        reader.onload = () => {\n            const fileData =  reader.result;\n            const wb = XLSX.read(fileData, {type : 'binary'});\n            const firstSheetName = wb.SheetNames[0];\n            const sheet = wb.Sheets[firstSheetName];\n            \n            mainSheet = []; \n            let range = XLSX.utils.decode_range(sheet['!ref']);\n\n            for(let R=2; R<=range.e.r; ++R) {\n                let rowData = [];\n                \n                rowData.push(getElem(sheet, 0, R));\n                rowData.push(getElem(sheet, 1, R));\n                rowData.push(getElem(sheet, 2, R));\n\n                mainSheet.push(rowData);\n            }\n        }\n        \n        reader.readAsBinaryString(e.target.files[0]);\n        fileName[0].innerHTML = e.target.files[0].name;\n        console.log(mainSheet);\n    };\n\n    return (\n        <Main>\n            <FileInput>\n                파일 올리기\n                <input type=\"file\" style={{display:'none'}} onChange={parseFile} />\n            </FileInput>\n        </Main>\n    );\n};\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}