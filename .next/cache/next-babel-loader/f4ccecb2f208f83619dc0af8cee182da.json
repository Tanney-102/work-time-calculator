{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/taeeun/Desktop/Programming/Projects/work-time-calc/pages/index.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport useWindowSize from '../hooks/useWindowSize';\nconst Main = styled.main`\n    background-color:#eceae9;\n\n    display:flex;\n    justify-content:center;\n    align-items:center;\n`;\nconst Button = styled.button`\n    color:#4c4a49;\n    font-family: 'GmarketSansMedium', '나눔고딕', NanumGothic, '돋움', Dotum, sans-serif;\n    font-size: 3.5rem;\n    line-height:2;\n    text-shadow:1px 1px 1px #5c5a59;\n\n    &:hover {\n        transform: scale(1.1);\n        transition: all 0.1s ease;\n    };\n`;\n\nconst Home = () => {\n  const winSize = useWindowSize();\n\n  const parseFile = e => {\n    const reader = new FileReader();\n    console.log(test);\n\n    reader.onload = () => {\n      const fileData = reader.result;\n      const wb = XLSX.read(fileData, {\n        type: 'binary'\n      });\n      const firstSheetName = wb.SheetNames[0];\n      const sheet = wb.Sheets[firstSheetName];\n      const mainSheet = [];\n      let range = XLSX.utils.decode_range(sheet['!ref']);\n\n      for (let R = 2; R <= range.e.r; ++R) {\n        let rowData = [];\n        rowData.push(getElem(sheet, 0, R));\n        rowData.push(getElem(sheet, 1, R));\n        rowData.push(getElem(sheet, 2, R));\n        mainSheet.push(rowData);\n      }\n\n      console.log(mainSheet);\n    };\n\n    reader.readAsBinaryString(e.target.files[0]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Main, {\n    style: {\n      height: winSize[1]\n    },\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      children: [\"\\uD30C\\uC77C \\uC62C\\uB9AC\\uAE30\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        style: {\n          display: 'none'\n        },\n        onChange: parseFile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: getResult,\n      children: \"\\uACB0\\uACFC \\uBCF4\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/taeeun/Desktop/Programming/Projects/work-time-calc/pages/index.js"],"names":["React","styled","useWindowSize","Main","main","Button","button","Home","winSize","parseFile","e","reader","FileReader","console","log","test","onload","fileData","result","wb","XLSX","read","type","firstSheetName","SheetNames","sheet","Sheets","mainSheet","range","utils","decode_range","R","r","rowData","push","getElem","readAsBinaryString","target","files","height","display","getResult"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AAEA,MAAMC,IAAI,GAAGF,MAAM,CAACG,IAAK;AACzB;AACA;AACA;AACA;AACA;AACA,CANA;AAQA,MAAMC,MAAM,GAAGJ,MAAM,CAACK,MAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;;AAaA,MAAMC,IAAI,GAAG,MAAM;AACf,QAAMC,OAAO,GAAGN,aAAa,EAA7B;;AAEA,QAAMO,SAAS,GAAIC,CAAD,IAAO;AACrB,UAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;;AAEAJ,IAAAA,MAAM,CAACK,MAAP,GAAgB,MAAM;AAClB,YAAMC,QAAQ,GAAIN,MAAM,CAACO,MAAzB;AACA,YAAMC,EAAE,GAAGC,IAAI,CAACC,IAAL,CAAUJ,QAAV,EAAoB;AAACK,QAAAA,IAAI,EAAG;AAAR,OAApB,CAAX;AACA,YAAMC,cAAc,GAAGJ,EAAE,CAACK,UAAH,CAAc,CAAd,CAAvB;AACA,YAAMC,KAAK,GAAGN,EAAE,CAACO,MAAH,CAAUH,cAAV,CAAd;AAEA,YAAMI,SAAS,GAAG,EAAlB;AACA,UAAIC,KAAK,GAAGR,IAAI,CAACS,KAAL,CAAWC,YAAX,CAAwBL,KAAK,CAAC,MAAD,CAA7B,CAAZ;;AAEA,WAAI,IAAIM,CAAC,GAAC,CAAV,EAAaA,CAAC,IAAEH,KAAK,CAAClB,CAAN,CAAQsB,CAAxB,EAA2B,EAAED,CAA7B,EAAgC;AAC5B,YAAIE,OAAO,GAAG,EAAd;AAEAA,QAAAA,OAAO,CAACC,IAAR,CAAaC,OAAO,CAACV,KAAD,EAAQ,CAAR,EAAWM,CAAX,CAApB;AACAE,QAAAA,OAAO,CAACC,IAAR,CAAaC,OAAO,CAACV,KAAD,EAAQ,CAAR,EAAWM,CAAX,CAApB;AACAE,QAAAA,OAAO,CAACC,IAAR,CAAaC,OAAO,CAACV,KAAD,EAAQ,CAAR,EAAWM,CAAX,CAApB;AAEAJ,QAAAA,SAAS,CAACO,IAAV,CAAeD,OAAf;AACH;;AAEDpB,MAAAA,OAAO,CAACC,GAAR,CAAYa,SAAZ;AACH,KApBD;;AAsBAhB,IAAAA,MAAM,CAACyB,kBAAP,CAA0B1B,CAAC,CAAC2B,MAAF,CAASC,KAAT,CAAe,CAAf,CAA1B;AACH,GA3BD;;AA6BA,sBACI,QAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,MAAM,EAAC/B,OAAO,CAAC,CAAD;AAAf,KAAb;AAAA,4BACI,QAAC,MAAD;AAAA,iEAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAE;AAACgC,UAAAA,OAAO,EAAC;AAAT,SAA1B;AAA4C,QAAA,QAAQ,EAAE/B;AAAtD;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEgC,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CA3CD;;AA6CA,eAAelC,IAAf","sourcesContent":["import React from 'react'\nimport styled from 'styled-components';\nimport useWindowSize from '../hooks/useWindowSize';\n\nconst Main = styled.main`\n    background-color:#eceae9;\n\n    display:flex;\n    justify-content:center;\n    align-items:center;\n`;\n\nconst Button = styled.button`\n    color:#4c4a49;\n    font-family: 'GmarketSansMedium', '나눔고딕', NanumGothic, '돋움', Dotum, sans-serif;\n    font-size: 3.5rem;\n    line-height:2;\n    text-shadow:1px 1px 1px #5c5a59;\n\n    &:hover {\n        transform: scale(1.1);\n        transition: all 0.1s ease;\n    };\n`;\n\nconst Home = () => {\n    const winSize = useWindowSize();\n\n    const parseFile = (e) => {\n        const reader = new FileReader();\n        console.log(test);\n    \n        reader.onload = () => {\n            const fileData =  reader.result;\n            const wb = XLSX.read(fileData, {type : 'binary'});\n            const firstSheetName = wb.SheetNames[0];\n            const sheet = wb.Sheets[firstSheetName];\n            \n            const mainSheet = []; \n            let range = XLSX.utils.decode_range(sheet['!ref']);\n\n            for(let R=2; R<=range.e.r; ++R) {\n                let rowData = [];\n                \n                rowData.push(getElem(sheet, 0, R));\n                rowData.push(getElem(sheet, 1, R));\n                rowData.push(getElem(sheet, 2, R));\n\n                mainSheet.push(rowData);\n            }\n\n            console.log(mainSheet);\n        }\n        \n        reader.readAsBinaryString(e.target.files[0]);\n    };\n\n    return (\n        <Main style={{height:winSize[1]}}>\n            <Button>\n                파일 올리기\n                <input type=\"file\" style={{display:'none'}} onChange={parseFile} />\n            </Button>\n            <Button onClick={getResult}>\n                결과 보기\n            </Button>\n        </Main>\n    );\n};\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}