{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/taeeun/Desktop/Programming/Projects/work-time-calc/pages/index.js\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport useWindowSize from '../hooks/useWindowSize';\nimport useInput from '../hooks/useInput';\nconst Main = styled.main.withConfig({\n  displayName: \"pages__Main\",\n  componentId: \"cqz4mh-0\"\n})([\"background-color:#eceae9;display:flex;flex-direction:column;justify-content:center;align-items:center;\"]);\nconst FileInput = styled.label.withConfig({\n  displayName: \"pages__FileInput\",\n  componentId: \"cqz4mh-1\"\n})([\"color:#4c4a49;font-family:'GmarketSansMedium','\\uB098\\uB214\\uACE0\\uB515',NanumGothic,'\\uB3CB\\uC6C0',Dotum,sans-serif;font-size:3.5rem;line-height:2;text-shadow:1px 1px 1px #5c5a59;&:hover{transform:scale(1.1);transition:all 0.1s ease;};\"]);\nconst Button = styled.button.withConfig({\n  displayName: \"pages__Button\",\n  componentId: \"cqz4mh-2\"\n})([\"color:#4c4a49;font-family:'GmarketSansMedium','\\uB098\\uB214\\uACE0\\uB515',NanumGothic,'\\uB3CB\\uC6C0',Dotum,sans-serif;font-size:3.5rem;line-height:2;text-shadow:1px 1px 1px #5c5a59;&:hover{transform:scale(1.1);transition:all 0.1s ease;};\"]);\n\nfunction Worker(name) {\n  this.name = name;\n  this.workTime = [];\n\n  this.getSum = () => {\n    return this.workTime.reduce((result, data) => {\n      return result + data.reduce((_res, _d, i) => {\n        if (_d[0] === 0 && data[i - 1][0] === 1) {\n          _res--;\n        } else if (i === data.length - 1 && _d[0] === 1) {\n          _res--;\n        }\n\n        return _res + _d[0];\n      }, 0) / 2;\n    }, 0);\n  };\n}\n\nconst getElem = (sheet, i, R) => {\n  let tmp = sheet[XLSX.utils.encode_cell({\n    c: i,\n    r: R\n  })];\n  let elem = 'UNKNOWN';\n  if (tmp && tmp.t) elem = XLSX.utils.format_cell(tmp);\n  return elem;\n};\n\nconst Home = () => {\n  const winSize = useWindowSize();\n  const {\n    0: mainFile,\n    1: setMainFile\n  } = useState(null);\n  const {\n    0: workerList,\n    1: setWorkerList\n  } = useState(null);\n  const {\n    0: resultPage,\n    1: setResultPage\n  } = useState(false);\n  const {\n    0: fileUploaded,\n    1: setFileUploaded\n  } = useState(false);\n\n  const parseFile = e => {\n    const reader = new FileReader();\n    console.log('test');\n\n    reader.onload = () => {\n      const fileData = reader.result;\n      const wb = XLSX.read(fileData, {\n        type: 'binary'\n      });\n      const firstSheetName = wb.SheetNames[0];\n      const sheet = wb.Sheets[firstSheetName];\n      const mainSheet = [];\n      let range = XLSX.utils.decode_range(sheet['!ref']);\n\n      for (let R = 2; R <= range.e.r; ++R) {\n        let rowData = [];\n        rowData.push(getElem(sheet, 0, R));\n        rowData.push(getElem(sheet, 1, R));\n        rowData.push(getElem(sheet, 2, R));\n        mainSheet.push(rowData);\n      }\n\n      setMainFile(mainSheet);\n    };\n\n    alert(`${e.target.files[0].name}이 정상적으로 업로드 되었습니다`);\n    reader.readAsBinaryString(e.target.files[0]);\n  };\n\n  const getResult = () => {\n    mainFile.sort((a, b) => {\n      if (a[0] < b[0]) {\n        return -1;\n      } else if (a[0] > b[0]) {\n        return 1;\n      } else {\n        if (a[1] < b[1]) {\n          return -1;\n        } else if (a[1] > b[1]) {\n          return 1;\n        }\n\n        return 0;\n      }\n    });\n    const workers = []; // array of Worker\n\n    let idx = 0;\n\n    while (idx < mainFile.length) {\n      const name = mainFile[idx][0];\n\n      if (name === 'UNKNOWN') {\n        idx++;\n        continue;\n      }\n\n      const rows = [];\n\n      const _worker = new Worker(name);\n\n      while (idx < mainFile.length && mainFile[idx][0] === name) rows.push(mainFile[idx++]);\n\n      let curDay = '';\n      let cur = -1;\n      rows.forEach(row => {\n        const beginDay = row[1].split(' ')[0];\n        const endDay = row[2].split(' ')[0];\n\n        if (curDay !== beginDay) {\n          if (_worker.workTime[cur + 1] === undefined) {\n            _worker.workTime.push(Array(49).fill([0, \"\"]));\n          }\n\n          curDay = beginDay;\n          cur++;\n        }\n\n        const beginTime = parseInt(row[1].split(' ')[2].split(':')[0]) + (row[1].split(' ')[2].split(':')[1] == 0 ? 0 : 0.5);\n        const endTime = parseInt(row[2].split(' ')[2].split(':')[0]) + (row[2].split(' ')[2].split(':')[1] == 0 ? 0 : 0.5);\n\n        if (beginDay === endDay) {\n          for (let i = beginTime * 2; i <= endTime * 2; i++) {\n            _worker.workTime[cur][i][0] = 1;\n            _worker.workTime[cur][beginTime * 2][1] = \"b\";\n            _worker.workTime[cur][endTime * 2][1] = \"e\";\n          }\n        } else {\n          if (_worker.workTime[cur + 1] === undefined) {\n            _worker.workTime.push(Array(49).fill([0, \"\"]));\n          }\n\n          for (let i = beginTime * 2; i < 49; i++) {\n            _worker.workTime[cur][i][0] = 1;\n          }\n\n          for (let i = 0; i <= endTime * 2; i++) {\n            _worker.workTime[cur + 1][i][0] = 1;\n          }\n\n          _worker.workTime[cur][beginTime * 2][1] = \"b\";\n          _worker.workTime[cur + 1][endTime * 2][1] = \"e\";\n        }\n      });\n      workers.push(_worker);\n    }\n\n    setWorkerList(workers);\n    setResultPage(true);\n  };\n\n  const btnTest = () => {\n    console.log(workerList[0]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Main, {\n    style: {\n      minHeight: winSize[1]\n    },\n    children: resultPage ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '400px'\n      },\n      children: workerList.map((v, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            border: '1px solid #bfbfbf'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '60%',\n              border: '1px solid #bfbfbf'\n            },\n            children: v.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '40%',\n              border: '1px solid #bfbfbf'\n            },\n            children: v.getSum()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(FileInput, {\n        children: [\"\\uD30C\\uC77C \\uC62C\\uB9AC\\uAE30\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          style: {\n            display: 'none'\n          },\n          onChange: parseFile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: getResult,\n        children: \"\\uACB0\\uACFC \\uBCF4\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 9\n  }, this);\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/taeeun/Desktop/Programming/Projects/work-time-calc/pages/index.js"],"names":["React","useState","styled","useWindowSize","useInput","Main","main","FileInput","label","Button","button","Worker","name","workTime","getSum","reduce","result","data","_res","_d","i","length","getElem","sheet","R","tmp","XLSX","utils","encode_cell","c","r","elem","t","format_cell","Home","winSize","mainFile","setMainFile","workerList","setWorkerList","resultPage","setResultPage","fileUploaded","setFileUploaded","parseFile","e","reader","FileReader","console","log","onload","fileData","wb","read","type","firstSheetName","SheetNames","Sheets","mainSheet","range","decode_range","rowData","push","alert","target","files","readAsBinaryString","getResult","sort","a","b","workers","idx","rows","_worker","curDay","cur","forEach","row","beginDay","split","endDay","undefined","Array","fill","beginTime","parseInt","endTime","btnTest","minHeight","width","map","v","display","border"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport styled from 'styled-components';\nimport useWindowSize from '../hooks/useWindowSize';\nimport useInput from '../hooks/useInput';\n\nconst Main = styled.main`\n    background-color:#eceae9;\n\n    display:flex;\n    flex-direction:column;\n    justify-content:center;\n    align-items:center;\n`;\n\nconst FileInput = styled.label`\n    color:#4c4a49;\n    font-family: 'GmarketSansMedium', '나눔고딕', NanumGothic, '돋움', Dotum, sans-serif;\n    font-size: 3.5rem;\n    line-height:2;\n    text-shadow:1px 1px 1px #5c5a59;\n\n    &:hover {\n        transform: scale(1.1);\n        transition: all 0.1s ease;\n    };\n`;\n\nconst Button = styled.button`\n    color:#4c4a49;\n    font-family: 'GmarketSansMedium', '나눔고딕', NanumGothic, '돋움', Dotum, sans-serif;\n    font-size: 3.5rem;\n    line-height:2;\n    text-shadow:1px 1px 1px #5c5a59;\n\n    &:hover {\n        transform: scale(1.1);\n        transition: all 0.1s ease;\n    };\n`;\n\nfunction Worker(name) {\n    this.name = name;\n    this.workTime = [];\n\n    this.getSum = () => {\n        return this.workTime.reduce((result, data) => {\n            return result + data.reduce((_res, _d, i) => {\n                if(_d[0] === 0 && data[i-1][0] === 1) {\n                    _res--;\n                } else if(i === data.length-1 && _d[0] === 1) {\n                    _res--;\n                } \n                return _res + _d[0];\n            }, 0)/2;\n        }, 0);\n    }\n}\n\nconst getElem = (sheet, i, R) => {\n    let tmp = sheet[XLSX.utils.encode_cell({c:i, r:R})]\n    let elem = 'UNKNOWN';\n    if(tmp && tmp.t) elem = XLSX.utils.format_cell(tmp);\n\n    return elem;\n}\n\nconst Home = () => {\n    const winSize = useWindowSize();\n    const [mainFile, setMainFile] = useState(null);\n    const [workerList, setWorkerList] = useState(null);\n    const [resultPage, setResultPage] = useState(false);\n    const [fileUploaded, setFileUploaded] = useState(false);\n\n    const parseFile = (e) => {\n        const reader = new FileReader();\n        console.log('test');\n    \n        reader.onload = () => {\n            const fileData =  reader.result;\n            const wb = XLSX.read(fileData, {type : 'binary'});\n            const firstSheetName = wb.SheetNames[0];\n            const sheet = wb.Sheets[firstSheetName];\n            \n            const mainSheet = []; \n            let range = XLSX.utils.decode_range(sheet['!ref']);\n\n            for(let R=2; R<=range.e.r; ++R) {\n                let rowData = [];\n                \n                rowData.push(getElem(sheet, 0, R));\n                rowData.push(getElem(sheet, 1, R));\n                rowData.push(getElem(sheet, 2, R));\n\n                mainSheet.push(rowData);\n            }\n\n            setMainFile(mainSheet);\n        }\n        \n        alert(`${e.target.files[0].name}이 정상적으로 업로드 되었습니다`);\n        reader.readAsBinaryString(e.target.files[0]);\n    };\n\n    const getResult = () => {\n        mainFile.sort((a, b) => {\n            if(a[0] < b[0]) {\n                return -1;\n            } else if(a[0] > b[0]) {\n                return 1;\n            } else {\n                if(a[1] < b[1]) {\n                    return -1;\n                } else if(a[1] > b[1]) {\n                    return 1;\n                }\n\n                return 0;\n            }\n        });\n\n        const workers = []; // array of Worker\n        let idx = 0;\n        while(idx < mainFile.length) {\n            const name = mainFile[idx][0];\n            if(name === 'UNKNOWN') {\n                idx++;\n                continue;\n            }\n\n            const rows = []\n            const _worker = new Worker(name);\n\n            while(idx < mainFile.length && mainFile[idx][0] === name) rows.push(mainFile[idx++]);\n\n            let curDay = '';\n            let cur = -1;\n            rows.forEach(row => {\n                const beginDay = row[1].split(' ')[0];\n                const endDay = row[2].split(' ')[0];\n\n                if(curDay !== beginDay) {\n                    if(_worker.workTime[cur+1] === undefined) {\n                        _worker.workTime.push(Array(49).fill([0, \"\"]));\n                    }\n                    curDay = beginDay;\n                    cur++;\n                }\n\n                const beginTime = parseInt(row[1].split(' ')[2].split(':')[0]) + (row[1].split(' ')[2].split(':')[1] == 0 ? 0 : 0.5);\n                const endTime = parseInt(row[2].split(' ')[2].split(':')[0]) + (row[2].split(' ')[2].split(':')[1] == 0 ? 0 : 0.5);\n\n                if(beginDay === endDay) {\n                    for(let i=beginTime*2; i<=endTime*2; i++) {\n                        _worker.workTime[cur][i][0] = 1;\n                        _worker.workTime[cur][beginTime*2][1] = \"b\";\n                        _worker.workTime[cur][endTime*2][1] = \"e\";\n                    }\n                } else {\n                    if(_worker.workTime[cur+1] === undefined) {\n                        _worker.workTime.push(Array(49).fill([0, \"\"]));\n                    }\n\n                    for(let i=beginTime*2; i<49; i++) {\n                        _worker.workTime[cur][i][0] = 1;\n                    }\n                    for(let i=0; i<=endTime*2; i++) {\n                        _worker.workTime[cur+1][i][0] = 1;\n                    }\n                    _worker.workTime[cur][beginTime*2][1] = \"b\";\n                    _worker.workTime[cur+1][endTime*2][1] = \"e\";\n                }\n            });\n\n            workers.push(_worker);\n        }\n\n        setWorkerList(workers);\n        setResultPage(true);\n    };\n\n    const btnTest = () => {\n        console.log(workerList[0]);\n    }\n\n    return (\n        <Main style={{minHeight:winSize[1]}}>\n            {resultPage ?\n            <div style={{width:'400px'}}>\n                {/* <button onClick={btnTest}>test</button> */}\n                {workerList.map((v, i) => {\n                    return (\n                        <div style={{\n                            display:'flex',\n                            border:'1px solid #bfbfbf'\n                        }}>\n                            <div style={{\n                                width:'60%',  \n                                border:'1px solid #bfbfbf'\n                            }}>\n                                {v.name}\n                            </div>\n                            <div style={{\n                                width:'40%',  \n                                border:'1px solid #bfbfbf'\n                            }}> \n                                {v.getSum()}\n                            </div>\n                        </div>\n                    );\n                })}\n            </div> :\n            <>\n            <FileInput>\n                파일 올리기\n                <input type=\"file\" style={{display:'none'}} onChange={parseFile} />\n            </FileInput>\n            <Button onClick={getResult}>\n                결과 보기\n            </Button>\n            </>}\n        </Main>\n    );\n};\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}