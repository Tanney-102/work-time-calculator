{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/taeeun/Desktop/Programming/Projects/work-time-calc/pages/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport useWindowSize from '../hooks/useWindowSize';\nvar Main = styled.main.withConfig({\n  displayName: \"pages__Main\",\n  componentId: \"cqz4mh-0\"\n})([\"background-color:#eceae9;display:flex;flex-direction:column;justify-content:center;align-items:center;\"]);\n_c = Main;\nvar FileInput = styled.label.withConfig({\n  displayName: \"pages__FileInput\",\n  componentId: \"cqz4mh-1\"\n})([\"color:#4c4a49;font-family:'GmarketSansMedium','\\uB098\\uB214\\uACE0\\uB515',NanumGothic,'\\uB3CB\\uC6C0',Dotum,sans-serif;font-size:3.5rem;line-height:2;text-shadow:1px 1px 1px #5c5a59;&:hover{transform:scale(1.1);transition:all 0.1s ease;};\"]);\n_c2 = FileInput;\nvar Button = styled.button.withConfig({\n  displayName: \"pages__Button\",\n  componentId: \"cqz4mh-2\"\n})([\"color:#4c4a49;font-family:'GmarketSansMedium','\\uB098\\uB214\\uACE0\\uB515',NanumGothic,'\\uB3CB\\uC6C0',Dotum,sans-serif;font-size:3.5rem;line-height:2;text-shadow:1px 1px 1px #5c5a59;&:hover{transform:scale(1.1);transition:all 0.1s ease;};\"]);\n_c3 = Button;\n\nfunction Worker(name) {\n  this.name = name;\n  this.workTime = []; // [ [ date, time], ... ]\n\n  this.getSum = function () {\n    return workTime.reduce(function (result, data) {\n      return result + data[1];\n    });\n  };\n}\n\n_c4 = Worker;\n\nvar getElem = function getElem(sheet, i, R) {\n  var tmp = sheet[XLSX.utils.encode_cell({\n    c: i,\n    r: R\n  })];\n  var elem = 'UNKNOWN';\n  if (tmp && tmp.t) elem = XLSX.utils.format_cell(tmp);\n  return elem;\n};\n\nvar Home = function Home() {\n  _s();\n\n  var winSize = useWindowSize();\n\n  var _useState = useState(null),\n      mainFile = _useState[0],\n      setMainFile = _useState[1];\n\n  var parseFile = function parseFile(e) {\n    var reader = new FileReader();\n    console.log('test');\n\n    reader.onload = function () {\n      var fileData = reader.result;\n      var wb = XLSX.read(fileData, {\n        type: 'binary'\n      });\n      var firstSheetName = wb.SheetNames[0];\n      var sheet = wb.Sheets[firstSheetName];\n      var mainSheet = [];\n      var range = XLSX.utils.decode_range(sheet['!ref']);\n\n      for (var R = 2; R <= range.e.r; ++R) {\n        var rowData = [];\n        rowData.push(getElem(sheet, 0, R));\n        rowData.push(getElem(sheet, 1, R));\n        rowData.push(getElem(sheet, 2, R));\n        mainSheet.push(rowData);\n      }\n\n      setMainFile(mainSheet);\n    };\n\n    reader.readAsBinaryString(e.target.files[0]);\n  };\n\n  var getResult = function getResult() {\n    mainFile.sort(function (a, b) {\n      return a[0] - b[0];\n    });\n    var workers = []; // array of Worker\n\n    var idx = 0;\n\n    while (idx < mainFile.length) {\n      var name = mainFile[idx];\n      var rows = [];\n\n      var _worker = new Worker(name);\n\n      while (mainFile[idx] === name) {\n        rows.push(mainFile[idx++]);\n      }\n\n      var idx2 = 0;\n\n      while (idx2 < rows.length) {\n        var date = rows[idx2];\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Main, {\n    style: {\n      height: winSize[1]\n    },\n    children: [/*#__PURE__*/_jsxDEV(FileInput, {\n      children: [\"\\uD30C\\uC77C \\uC62C\\uB9AC\\uAE30\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        style: {\n          display: 'none'\n        },\n        onChange: parseFile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: getResult,\n      children: \"\\uACB0\\uACFC \\uBCF4\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Home, \"xLhMBlDHdKGDYJaIrgoytXkYTfA=\", false, function () {\n  return [useWindowSize];\n});\n\n_c5 = Home;\nexport default Home;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Main\");\n$RefreshReg$(_c2, \"FileInput\");\n$RefreshReg$(_c3, \"Button\");\n$RefreshReg$(_c4, \"Worker\");\n$RefreshReg$(_c5, \"Home\");","map":{"version":3,"sources":["/Users/taeeun/Desktop/Programming/Projects/work-time-calc/pages/index.js"],"names":["React","useState","styled","useWindowSize","Main","main","FileInput","label","Button","button","Worker","name","workTime","getSum","reduce","result","data","getElem","sheet","i","R","tmp","XLSX","utils","encode_cell","c","r","elem","t","format_cell","Home","winSize","mainFile","setMainFile","parseFile","e","reader","FileReader","console","log","onload","fileData","wb","read","type","firstSheetName","SheetNames","Sheets","mainSheet","range","decode_range","rowData","push","readAsBinaryString","target","files","getResult","sort","a","b","workers","idx","length","rows","_worker","idx2","date","height","display"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport styled from 'styled-components';\nimport useWindowSize from '../hooks/useWindowSize';\n\nconst Main = styled.main`\n    background-color:#eceae9;\n\n    display:flex;\n    flex-direction:column;\n    justify-content:center;\n    align-items:center;\n`;\n\nconst FileInput = styled.label`\n    color:#4c4a49;\n    font-family: 'GmarketSansMedium', '나눔고딕', NanumGothic, '돋움', Dotum, sans-serif;\n    font-size: 3.5rem;\n    line-height:2;\n    text-shadow:1px 1px 1px #5c5a59;\n\n    &:hover {\n        transform: scale(1.1);\n        transition: all 0.1s ease;\n    };\n`;\n\nconst Button = styled.button`\n    color:#4c4a49;\n    font-family: 'GmarketSansMedium', '나눔고딕', NanumGothic, '돋움', Dotum, sans-serif;\n    font-size: 3.5rem;\n    line-height:2;\n    text-shadow:1px 1px 1px #5c5a59;\n\n    &:hover {\n        transform: scale(1.1);\n        transition: all 0.1s ease;\n    };\n`;\n\nfunction Worker(name) {\n    this.name = name;\n    this.workTime = []; // [ [ date, time], ... ]\n\n    this.getSum = () => {\n        return workTime.reduce((result, data) => {\n            return result + data[1];\n        });\n    }\n}\n\nconst getElem = (sheet, i, R) => {\n    let tmp = sheet[XLSX.utils.encode_cell({c:i, r:R})]\n    let elem = 'UNKNOWN';\n    if(tmp && tmp.t) elem = XLSX.utils.format_cell(tmp);\n\n    return elem;\n}\n\nconst Home = () => {\n    const winSize = useWindowSize();\n    const [mainFile, setMainFile] = useState(null);\n\n    const parseFile = (e) => {\n        const reader = new FileReader();\n        console.log('test');\n    \n        reader.onload = () => {\n            const fileData =  reader.result;\n            const wb = XLSX.read(fileData, {type : 'binary'});\n            const firstSheetName = wb.SheetNames[0];\n            const sheet = wb.Sheets[firstSheetName];\n            \n            const mainSheet = []; \n            let range = XLSX.utils.decode_range(sheet['!ref']);\n\n            for(let R=2; R<=range.e.r; ++R) {\n                let rowData = [];\n                \n                rowData.push(getElem(sheet, 0, R));\n                rowData.push(getElem(sheet, 1, R));\n                rowData.push(getElem(sheet, 2, R));\n\n                mainSheet.push(rowData);\n            }\n\n            setMainFile(mainSheet);\n        }\n        \n        reader.readAsBinaryString(e.target.files[0]);\n    };\n\n    const getResult = () => {\n        mainFile.sort((a, b) => {\n            return a[0] - b[0];\n        });\n\n        const workers = []; // array of Worker\n        let idx = 0;\n        while(idx < mainFile.length) {\n            const name = mainFile[idx];\n            const rows = []\n            const _worker = new Worker(name);\n\n            while(mainFile[idx] === name) rows.push(mainFile[idx++]);\n\n            let idx2 = 0;\n            while(idx2 < rows.length) {\n                const date = rows[idx2];\n                \n            }\n\n        }\n    };\n\n    return (\n        <Main style={{height:winSize[1]}}>\n            <FileInput>\n                파일 올리기\n                <input type=\"file\" style={{display:'none'}} onChange={parseFile} />\n            </FileInput>\n            <Button onClick={getResult}>\n                결과 보기\n            </Button>\n        </Main>\n    );\n};\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}